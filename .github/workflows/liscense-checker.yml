name: "Check if License is present"

on:
  pull_request:
    branches:
      - "main"
    types:
      - opened
      - reopened
      - synchronize
      - assigned
      - review_requested

jobs:
  check-license-headers-on-pr:
    runs-on: ubuntu-20.04
    steps:
      - name: Checkout code
        uses: actions/checkout@v4

      - name: Set up Python
        uses: actions/setup-python@v5
        with:
          python-version: '3.8'

      - name: Install Copyright Check
        run: python -m pip install git+https://github.com/espressif/check-copyright.git@master

      - name: Check SPDX licenses and comment on PR
        uses: actions/github-script@v6
        with:
          script: |
            const { execSync } = require('child_process');
            const { existsSync } = require('fs');
            
            const configFilePath = './check_copyright_config.yaml';
            
            if (!existsSync(configFilePath)) {
                throw new Error(`Config file not found: ${configFilePath}`);
            }
            
            const command = `python -m check_copyright --verbose --dry-run --replace --config ${configFilePath} .`;
            let output;
            try {
                output = execSync(command, { encoding: 'utf-8' }); // captures stdout
            } catch (error) {
                output = error.stdout; // captures stdout from the error, if command execution fails
            }
            
            // Clean the output from terminal color codes and irrelevant messages
            output = output.replace(/\u001b\[.*?m/g, ''); // Remove ANSI color codes
            const lines = output.split('\n');
            
            // Extract only lines with file paths that are specifically indicated as missing a license header
            const fileList = lines
                .filter(line => line.trim() && !line.includes('Modified files:') && !line.includes('Above is a list of files, which were modified'))
                .join('\n');
            
            const issueNumber = context.issue.number;
            const owner = context.repo.owner;
            const repo = context.repo.repo;
            
            if (fileList) {
                const commentBody = `The following files are missing a license header:\n\`\`\`\n${fileList}\n\`\`\`\nPlease ensure each indicated file includes a valid SPDX license identifier.`;
                await github.rest.issues.createComment({
                issue_number: issueNumber,
                owner: owner,
                repo: repo,
                body: commentBody
                });
                // Fail the job if missing files are found
                process.exit(1);
            } else {
                console.log("No SPDX license issues found.");
            }